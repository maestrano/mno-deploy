---

- name: Nex! | Release folder
  set_fact: release_folder="{{lookup('pipe','date +%Y%m%d%H%M%S')}}"

- name: Nex! | Download application from S3 (nex-XXX.tar.gz)
  s3:
    bucket: "{{ mno_pkgs_bucket }}"
    object: "nex/{{ nex_folder }}/{{ nex_version }}.tar.gz"
    dest: "{{ deploy_directory }}/{{ nex_version }}.tar.gz"
    mode: get
    region: "{{ mno_pkgs_s3_aws_region }}"
    aws_access_key: "{{ mno_pkgs_s3_aws_access_key }}"
    aws_secret_key: "{{ mno_pkgs_s3_aws_secret_key }}"

- name: Nex! | Replace version
  file:
    path: "{{ deploy_directory }}/releases/{{ release_folder }}"
    state: absent

- name: Nex! | Create version directory (/apps/nex/releases/XXX)
  file: path={{ deploy_directory }}/releases/{{ release_folder }} owner=deployer group=deployer state=directory

- name: Nex! | Extract current version
  command: "tar -xzf {{ deploy_directory }}/{{ nex_version }}.tar.gz -C {{ deploy_directory }}/releases/{{ release_folder }}"

- name: Nex! | Clean up tar file
  file:
    path: "{{ deploy_directory }}/{{ nex_version }}.tar.gz"
    state: absent

- name: Nex! | Clean up gems
  file:
    path: "{{ deploy_directory }}/releases/{{ release_folder }}/vendor/bundle"
    state: absent

- name: Nex! | Clean up gems
  file:
    path: "{{ deploy_directory }}/releases/{{ release_folder }}/vendor"
    state: directory

- name: Nex! | Database file database.yml
  template:
    src: database.yml
    dest: "{{ deploy_directory }}/releases/{{ release_folder }}/config/database.yml"
    owner: deployer
    group: deployer
    mode: 0755

- name: Nex! | Configuration file config/application.yml
  template:
    src: application.yml
    dest: "{{ deploy_directory }}/shared/config/application.yml"
    owner: deployer
    group: deployer
    mode: 0755

- name: Nex! | Replace config/application.yml
  file:
    path: "{{ deploy_directory }}/releases/{{ release_folder }}/config/application.yml"
    state: absent

- name: Nex! | Symbolic link to config/application.yml
  file:
    src: "{{ deploy_directory }}/shared/config/application.yml"
    dest: "{{ deploy_directory }}/releases/{{ release_folder }}/config/application.yml"
    owner: deployer
    group: deployer
    state: link
    force: yes

- name: Nex! | Set directory permissions
  file:
    path: "{{ deploy_directory }}/releases/{{ release_folder }}"
    mode: 0755
    owner: deployer
    group: deployer
    state: directory
    recurse: yes

- name: Nex! | Symbolic link to gems
  file:
    src: "{{ deploy_directory }}/shared/vendor_bundle"
    dest: "{{ deploy_directory }}/releases/{{ release_folder }}/vendor/bundle"
    owner: deployer
    group: deployer
    state: link
    force: yes

- name: Nex! | Configure settings file
  copy:
    content: "{{ lookup('file', 'files/nex/' + environment_name + '/' + rails_environment + '/settings.yml') }}"
    dest: "{{ deploy_directory }}/releases/{{ release_folder }}/config/settings/{{ rails_environment }}.yml"
    owner: deployer
    group: deployer
    mode: 0755

- name: Nex! | Run bundle install
  command: "chdir={{ deploy_directory }}/releases/{{ release_folder }} bundle install --path={{ deploy_directory }}/shared/vendor_bundle --gemfile={{ deploy_directory }}/releases/{{ release_folder }}/Gemfile --deployment --without development test"
  sudo_user: deployer

- name: Nex! | Replace previous version
  file:
    path: "{{ deploy_directory }}/current"
    state: absent

- name: Nex! | Symbolic link to current version
  file:
    src: "{{ deploy_directory }}/releases/{{ release_folder }}"
    dest: "{{ deploy_directory }}/current"
    owner: deployer
    group: deployer
    state: link
    force: yes

- name: Nex! | Symbolic link to log directory
  file:
    src: "{{ deploy_directory }}/shared/log"
    dest: "{{ deploy_directory }}/releases/{{ release_folder }}/log"
    owner: deployer
    group: deployer
    state: link
    force: yes

- name: Nex! | Set log directory permissions
  file:
    path: "{{ deploy_directory }}/shared/log"
    mode: 0755
    owner: deployer
    group: deployer
    state: directory
    recurse: yes

- name: Nex! | Migrate the database
  shell: "chdir={{ deploy_directory }}/releases/{{ release_folder }} bundle exec rake db:migrate"
  environment: "{{ default_environment }}"
  become: yes
  become_user: deployer

- name: Nex! | Restart puma service
  service: name=puma state=restarted

- name: Nex! | Restart sidekiq service
  service: name=sidekiq state=restarted

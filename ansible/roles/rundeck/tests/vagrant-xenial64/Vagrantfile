# -*- mode: ruby -*-
# vi: set ft=ruby :

# Install the following if boxes fails to boot:
# vagrant plugin install vagrant-vbguest


IP_ADDRESS = "172.16.0.20"
HTTP_PORT  = 8069
HTTPS_PORT = 8469

PLAYBOOK = ENV['PLAYBOOK'] || 'default_test.yml'

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = "2"

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  # Every Vagrant virtual environment requires a box to build off of.
  config.vm.box = "bento/ubuntu-16.04" # "boxcutter/ubuntu1604" # "ubuntu/xenial64" #

  ## identifier
  config.vm.hostname = "vagrant-ansible-rundeck-xenial64"
  ## Network
  config.vm.network "private_network", ip: IP_ADDRESS, auto_config: false
  config.vm.network "forwarded_port", guest: 4440, host: HTTP_PORT  # Web server
  config.vm.network "forwarded_port", guest: 443, host: HTTPS_PORT # Secure web server
  ## virtual box specification
  config.vm.provider "virtualbox" do |v|
    v.customize ["modifyvm", :id, "--cpuexecutioncap", "50"]
    v.customize ["modifyvm", :id, "--memory", 2048]
    v.customize ["modifyvm", :id, "--cableconnected1", "on"]
    v.customize ["modifyvm", :id, "--nictype1", "virtio"]
  end
  ## Provision via ansible using the defaults:
  config.vm.provision "ansible" do |ansible|
    ansible.extra_vars = {
      rundeck_domain: "localhost:#{HTTP_PORT}",
      java_packages: [ "openjdk-8-jre-headless" ]
    }
    ansible.groups = {
      "rundeck-servers" => [ "default" ]
    }
    ansible.playbook = "../#{PLAYBOOK}"
    ansible.host_key_checking = false
    ansible.verbose = "v"
    # use ANSIBLE_KEEP_REMOTE_FILES=1 to debug execution
  end
end

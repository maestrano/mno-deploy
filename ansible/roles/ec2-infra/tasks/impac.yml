---

# Impac! Configuration

- set_fact: maestrano_component="impac-app-server-local"

- name: Impac! | Create Impac Redis Store
  elasticache:
    name: "{{ impac.redis.name }}"
    state: present
    engine: redis
    cache_port: "{{ impac.redis.cache_port }}"
    cache_engine_version: "{{ impac.redis.cache_engine_version }}"
    cache_parameter_group: "{{ impac.redis.cache_parameter_group }}"
    node_type: "{{ impac.redis.node_type }}"
    num_nodes: "{{ impac.redis.num_nodes }}"
    cache_subnet_group: "{{ redis_group.name }}"
    security_group_ids: "{{ redis_group.vpc_security_groups }}"
    region: "{{ aws_region }}"
    wait: yes
  when: not impac.redis.skip
  register: created_impac_redis

- name: Impac! | Add Redis Store DNS record
  route53:
    command: create
    zone: "{{ (route53.zone.name|string) }}"
    alias_hosted_zone_id: "{{ route53.zone.id }}"
    record: "{{ impac.redis.endpoint }}"
    type: CNAME
    value: "{{ created_impac_redis.elasticache.data.CacheNodes[0].Endpoint.Address }}"
    alias: False
    ttl: 60
    private_zone: "{{ route53.zone.private_zone }}"
  when: not impac.redis.skip

- name: Impac! | Create RDS subnets
  rds_subnet_group:
    name: "{{ environment_name }}-impac-rds-subnet"
    description: Subnet Group for Impac! RDS instance
    state: present
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_region: "{{ lookup('env', 'AWS_REGION') }}"
    subnets: "{{ impac.rds.subnets }}"
  when: not impac.rds.skip
  register: rds_subnet_impac

- name: Impac! | Create RDS instance
  rds:
    command: create
    instance_name: "{{ impac.rds.name }}"
    db_engine: "{{ impac.rds.db_engine }}"
    size: "{{ impac.rds.size }}"
    instance_type: "{{ impac.rds.instance_type }}"
    multi_zone: "{{ impac.rds.multi_zone }}"
    subnet: "{{ environment_name }}-impac-rds-subnet"
    vpc_security_groups: "{{ impac.rds.vpc_security_groups }}"
    username: "{{ impac.rds.username }}"
    password: "{{ impac.rds.password }}"
    wait: yes
    wait_timeout: 2400
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    aws_region: "{{ lookup('env', 'AWS_REGION') }}"
    tags: "{{ impac.rds.tags }}"
  when: not impac.rds.skip
  register: rds_impac

- name: Impac! | Add DNS record
  route53:
    command: create
    zone: "{{ (route53.zone.name|string) }}"
    alias_hosted_zone_id: "{{ route53.zone.id }}"
    record: "{{ impac.rds.endpoint }}"
    type: CNAME
    value: "{{ rds_impac.instance.endpoint }}"
    alias: False
    ttl: 60
    private_zone: "{{ route53.zone.private_zone }}"
  when: not impac.rds.skip

- name: Impac! | Create Impac! ELB
  ec2_elb_lb:
    name: "{{ impac.elastic_load_balancer.name }}"
    state: present
    scheme: "{{ impac.elastic_load_balancer.scheme | default('internet-facing')}}"
    connection_draining_timeout: "{{ impac.elastic_load_balancer.connection_draining_timeout }}"
    cross_az_load_balancing: "yes"
    region: "{{ aws_region }}"
    ec2_access_key: "{{ aws_access_key }}"
    ec2_secret_key: "{{ aws_secret_key }}"
    subnets: "{{ impac.elastic_load_balancer.subnets }}"
    security_group_ids: "{{ impac.elastic_load_balancer.security_group_ids }}"
    listeners: "{{ impac.elastic_load_balancer.listeners }}"
    health_check: "{{ impac.elastic_load_balancer.health_check }}"
  when: not impac.elastic_load_balancer.skip
  register: impac_elastic_load_balancer

- name: Impac! | Add DNS record for ELB
  route53:
    command: create
    zone: "{{ (route53.zone.name|string) }}"
    record: "{{ impac.dns_record.record }}"
    type: "{{ impac.dns_record.type }}"
    value: "{{ impac_elastic_load_balancer.elb.dns_name }}"
    alias: "{{ impac.dns_record.alias }}"
    ttl: "{{ impac.dns_record.ttl }}"
    private_zone: "{{ route53.zone.private_zone }}"
    alias_hosted_zone_id: "{{ impac.elastic_load_balancer.alias_hosted_zone_id }}"
    overwrite: "{{ impac.dns_record.overwrite }}"
  when: not impac.elastic_load_balancer.skip

- name: Impac! | Create Impac! Launch Configuration
  ec2_lc:
    name: "{{ impac.launch_configuration.name }}"
    key_name: "{{ impac.launch_configuration.key_name }}"
    region: "{{ aws_region }}"
    ec2_access_key: "{{ aws_access_key }}"
    ec2_secret_key: "{{ aws_secret_key }}"
    image_id: "{{ impac.launch_configuration.image_id }}"
    instance_type: "{{ impac.launch_configuration.instance_type }}"
    security_groups: "{{ impac.launch_configuration.security_groups }}"
    user_data: "{{ lookup('template', '../templates/user_data.sh') }}"
    volumes:
      - device_name: /dev/sda1
        volume_size: 50
        device_type: gp2 # SSD
        delete_on_termination: true
  when: not impac.launch_configuration.skip and (impac.launch_configuration.spot_price is undefined or impac.launch_configuration.spot_price is none)

- name: Impac! | Create Impac! Launch Configuration (spot instances)
  ec2_lc:
    name: "{{ impac.launch_configuration.name }}"
    key_name: "{{ impac.launch_configuration.key_name }}"
    region: "{{ aws_region }}"
    ec2_access_key: "{{ aws_access_key }}"
    ec2_secret_key: "{{ aws_secret_key }}"
    image_id: "{{ impac.launch_configuration.image_id }}"
    instance_type: "{{ impac.launch_configuration.instance_type }}"
    spot_price: "{{ impac.launch_configuration.spot_price }}"
    security_groups: "{{ impac.launch_configuration.security_groups }}"
    user_data: "{{ lookup('template', '../templates/user_data.sh') }}"
    volumes:
      - device_name: /dev/sda1
        volume_size: 50
        device_type: gp2 # SSD
        delete_on_termination: true
  when: not impac.launch_configuration.skip and (impac.launch_configuration.spot_price is defined and impac.launch_configuration.spot_price is not none)

- name: Impac! | Create Impac! Auto Scaling Group
  ec2_asg:
    name: "{{ impac.auto_scaling_group.name }}"
    region: "{{ aws_region }}"
    aws_access_key: "{{ aws_access_key }}"
    aws_secret_key: "{{ aws_secret_key }}"
    launch_config_name: "{{ impac.launch_configuration.name }}"
    min_size: "{{ impac.auto_scaling_group.min_size }}"
    max_size: "{{ impac.auto_scaling_group.max_size }}"
    desired_capacity: "{{ impac.auto_scaling_group.desired_capacity }}"
    vpc_zone_identifier: "{{ impac.auto_scaling_group.vpc_zone_identifier }}"
    availability_zones: "{{ impac.auto_scaling_group.availability_zones }}"
    load_balancers: "{{ impac.elastic_load_balancer.name }}"
    tags: "{{ impac.auto_scaling_group.tags }}"
  when: not impac.auto_scaling_group.skip
  register: impac_auto_scaling_group

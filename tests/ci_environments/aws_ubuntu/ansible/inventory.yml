---

- name: Generate an inventory file for testing
  hosts: localhost
  connection: local
  vars_files:
  - [ "vars/{{ env_config }}.yml" ]
  - [ "vars/{{ env_config }}_secrets.yml" ]
  tasks:
    #=======================================
    # Jumpbox / NAT
    #=======================================
    - name: Collect Jumpbox EC2 Inventory
      ec2_remote_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc.vpc_id }}"
          "tag:Name": "{{ vpc_base_name }}-nat"
          "tag:Environment": "{{ environment_name }}"
      register: ec2_nat
    - debug: var=ec2_nat

    #=======================================
    # Connec!
    #=======================================
    - name: Collect Connec! API EC2 Inventory
      ec2_remote_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc.vpc_id }}"
          "tag:Name": "{{connec.auto_scaling_group.api.tags[0].Name}}"
          "tag:Environment": "{{ environment_name }}"
      register: ec2_connec_api
    - debug: var=ec2_connec_api

    - name: Collect Connec! Job EC2 Inventory
      ec2_remote_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc.vpc_id }}"
          "tag:Name": "{{connec.auto_scaling_group.jobs.tags[0].Name}}"
          "tag:Environment": "{{ environment_name }}"
      register: ec2_connec_jobs
    - debug: var=ec2_connec_jobs

    #=======================================
    # Impac!
    #=======================================
    - name: Collect Impac! API EC2 Inventory
      ec2_remote_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc.vpc_id }}"
          "tag:Name": "{{impac.auto_scaling_group.tags[0].Name}}"
          "tag:Environment": "{{ environment_name }}"
      register: ec2_impac_api
    - debug: var=ec2_impac_api

    #=======================================
    # MnoHub
    #=======================================
    - name: Collect MnoHub API EC2 Inventory
      ec2_remote_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc.vpc_id }}"
          "tag:Name": "{{mnohub.auto_scaling_group.tags[0].Name}}"
          "tag:Environment": "{{ environment_name }}"
      register: ec2_mnohub_api
    - debug: var=ec2_mnohub_api

    #=======================================
    # MongoDB
    #=======================================
    - name: Collect MongoDB API EC2 Inventory
      ec2_remote_facts:
        region: "{{ aws_region }}"
        filters:
          vpc-id: "{{ vpc.vpc_id }}"
          "tag:Name": "{{mongo.cluster.tags.Name}}"
          "tag:Environment": "{{ environment_name }}"
      register: ec2_mongodb
    - debug: var=ec2_mongodb

    #=======================================
    # Generate Inventory file
    #=======================================
    - name: Generate Inventory File
      template:
        src: templates/inventory.json
        dest: ../inventory/inventory.json
